Answers for Lab 2
-----------------------------------------------



EXERCISE 1

1. Should instance variable interestRate be declared as static? Explain.
Yes. since it's being used by all classes, so it should be accessable without creating a class instance.

2. Write the output from the test harness for class SavingsAccount. 

BankAccount: balance $0.0
BankAccount: balance $5000.0
CheckingAccount: balance $500.0, transactions 0
SavingsAccount: balance 1000.0, interest rate 1.0

EXERCISE 2

3. Which method(s) of the class CheckingAccount demonstrate overriding? Which methods demonstrate overloading?

deposit, withdraw demonstrate overriding.

None of these methods are examples of overloading, as overloading requires the methods to have the same name but different parameters

4. Is bacc0 = chacc1 legal? Why?
Yes. chacc1 is part of checkingaccount, and checkingaccount is a subclass of bankaccount

5. Is chacc1 = bacc1 legal? Why?
No. chacc1 is a subclass of bacc1 so it has to cast to bacc1 of checkingaccount.

6. On which variables bacc1, chacc1, sacc1 was the invocation to method
deductFees() valid? Explain.
only chacc1 becuase it is part of checkingaccount, which has the method deductfees.

7. Which compilation error(s) could be fixed through casting? Which one(s)
could not be fixed? Why?
sacc1 could not be fixed, as savingsaccount could not be cast to checkingaccount, which houses deductfees.
bacc1 was fixed, as it's an object of the parent class of checkingaccount.

8. Does the program run after deleting the line causing the compilation 
error? If the program crashed, why did it crash?

it crashed because bankaccount cannot be cast to class checkingaccount.

9. What was the runtime error obtained when changing super.deposit(amount)
to deposit(amount) in class CheckingAccount.java? 
stackoverflow


10. How many times is method deposit invoked?
100, becuase without super it loses the link to bankaccount


EXERCISE 3

11. Why does the compiler issue an error message when invoking newAcc.getTransactionCount()? Why does the compiler issue an error message when invoking newAcc.getInterestRate()?
becuase neither of them exist in bankaccount, it's currently used in a different class bankmachine


12. Can you tell whether in the statement String accountInfo = newAcc.toString(); the
method toString() being invoked is from the class CheckingAccount or from the class
SavingsAccount? Explain your answer.
I don't think so. It depends on the input of the user, if they type c or s.